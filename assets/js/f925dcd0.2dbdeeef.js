"use strict";(self.webpackChunkdocuments=self.webpackChunkdocuments||[]).push([[584],{7423:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"read-write/read","title":"Read OSC","description":"If you want to read OSC from byte[] at any given time, use ExtremeOsc.OscReader.","source":"@site/docs/read-write/read.md","sourceDirName":"read-write","slug":"/read-write/read","permalink":"/ExtremeOsc/docs/read-write/read","draft":false,"unlisted":false,"editUrl":"https://github.com/umetaman/ExtremeOsc/docs/read-write/read.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"Read OSC","sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"Receive OSC (OscServer)","permalink":"/ExtremeOsc/docs/send-receive/receive"},"next":{"title":"Write OSC","permalink":"/ExtremeOsc/docs/read-write/write"}}');var s=r(4848),a=r(8453);const i={title:"Read OSC",sidebar_position:0},o=void 0,f={},c=[{value:"OscReader",id:"oscreader",level:2}];function d(e){const t={code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["If you want to read OSC from ",(0,s.jsx)(t.code,{children:"byte[]"})," at any given time, use ",(0,s.jsx)(t.code,{children:"ExtremeOsc.OscReader"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Since it is implemented as a low-level API, it may be somewhat difficult to understand."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:"For example, if you want to read the following OSC:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:'title="OSC"',children:'/example ,ifsT 12345 123.45f "Hello, World!"\n'})}),"\n",(0,s.jsxs)(t.p,{children:["You can use ",(0,s.jsx)(t.code,{children:"ExtremeOsc.OscReader"})," to read values one by one."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:'title="Reading values one by one"',children:"// Received byte[]\r\nbyte[] buffer;\r\n\r\nint offset = 0;\r\nstring address = OscReader.ReadString(buffer, ref offset);\r\n\r\n// address + ','\r\nint offsetTagTypes = offset + 1;\r\n\r\nint value0 = OscReader.ReadInt32(buffer, ref offset);\r\noffsetTagTypes++;\r\n\r\nfloat value1 = OscReader.ReadFloat(buffer, ref offset);\r\noffsetTagTypes++;\r\n\r\nstring value2 = OscReader.ReadString(buffer, ref offset);\r\noffsetTagTypes++;\r\n\r\n// For values represented directly by tag types, use the tag type offset.\r\nbool value3 = OscReader.ReadBoolean(buffer, offsetTagTypes);\r\noffsetTagTypes++;\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:'title="Pre-reading before retrieving values"',children:"var reader = OscReader.Read(buffer);\r\n\r\n// Specify index\r\nint value0 = reader.GetAsInt32(0);\r\nfloat value1 = reader.GetAsFloat(1);\r\nstring value2 = reader.GetAsString(2);\r\nbool value3 = reader.GetAsBoolean(3);\r\n\r\n// Retrieve as object[]\r\nobject[] values = reader.GetAsObjects();\n"})}),"\n",(0,s.jsxs)(t.p,{children:["In most cases, these lines of code are unnecessary as ",(0,s.jsx)(t.code,{children:"[OscPackable]"})," can automatically generate them."]}),"\n",(0,s.jsx)(t.h2,{id:"oscreader",children:"OscReader"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:"public static int ReadStringLength(byte[] buffer, int offset);\r\npublic static string ReadString(byte[] buffer, ref int offset);\r\npublic static bool IsBundle(byte[] buffer, ref int offset);\r\npublic static int ReadInt32(byte[] buffer, ref int offset);\r\npublic static long ReadInt64(byte[] buffer, ref int offset);\r\npublic static float ReadFloat(byte[] buffer, ref int offset);\r\npublic static byte[] ReadBlob(byte[] buffer, ref int offset);\r\npublic static ulong ReadULong(byte[] buffer, ref int offset);\r\npublic static double ReadDouble(byte[] buffer, ref int offset);\r\npublic static Color32 ReadColor32(byte[] buffer, ref int offset);\r\npublic static char ReadChar(byte[] buffer, ref int offset);\r\npublic static bool ReadBoolean(byte[] buffer, int offset);\r\npublic static Infinitum ReadInfinitum(byte[] buffer, int offset);\r\npublic static Nil ReadNil(byte[] buffer, int offset);\r\npublic static ulong ReadTimeTagAsULong(byte[] buffer, ref int offset);\r\npublic static DateTime ReadTimeTagAsDateTime(byte[] buffer, ref int offset);\r\npublic static int ReadMidi(byte[] buffer, ref int offset);\n"})})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(6540);const s={},a=n.createContext(s);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);