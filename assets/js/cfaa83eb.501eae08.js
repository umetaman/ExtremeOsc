"use strict";(self.webpackChunkdocuments=self.webpackChunkdocuments||[]).push([[4],{6979:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started/hello-world","title":"Hello, World!","description":"Sending OSC","source":"@site/docs/getting-started/hello-world.mdx","sourceDirName":"getting-started","slug":"/getting-started/hello-world","permalink":"/ExtremeOsc/docs/getting-started/hello-world","draft":false,"unlisted":false,"editUrl":"https://github.com/umetaman/ExtremeOsc/docs/getting-started/hello-world.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Hello, World!","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/ExtremeOsc/docs/getting-started/installation"},"next":{"title":"Send OSC (OscClient)","permalink":"/ExtremeOsc/docs/send-receive/send"}}');var r=t(4848),i=t(8453);const a={title:"Hello, World!",sidebar_position:1},l=void 0,c={},d=[{value:"Sending OSC",id:"sending-osc",level:2},{value:"Defining Classes (Structs)",id:"defining-classes-structs",level:3},{value:"Sending Data",id:"sending-data",level:3},{value:"Receiving OSC",id:"receiving-osc",level:2},{value:"Defining Classes (Structs)",id:"defining-classes-structs-1",level:3},{value:"Receiving Data",id:"receiving-data",level:3}];function o(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"sending-osc",children:"Sending OSC"}),"\n",(0,r.jsx)(n.h3,{id:"defining-classes-structs",children:"Defining Classes (Structs)"}),"\n",(0,r.jsx)(n.p,{children:'The term "class" in this context can also refer to structs.'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["1. Define the data to be sent via OSC as a class. Attach the ",(0,r.jsx)(n.code,{children:"[OscPackable]"})," attribute to the defined class."]})}),"\n",(0,r.jsxs)(n.p,{children:["A class can be annotated with ",(0,r.jsx)(n.code,{children:"[OscPackable]"})," if it meets the following conditions:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It is a root class (not nested within another class)."}),"\n",(0,r.jsx)(n.li,{children:"It is not an abstract class."}),"\n",(0,r.jsx)(n.li,{children:"It is a partial class."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["2. Add the ",(0,r.jsx)(n.code,{children:"[OscElementAt(int)]"})," attribute to the properties or fields that should be sent via OSC. These attributes determine the order of data, so they must be sequential."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="ExampleData.cs"',children:"using ExtremeOsc;\r\n\r\n// The class must be partial for automatic code generation.\r\n// highlight-next-line\r\n[OscPackable]\r\npublic partial class ExampleData\r\n{\r\n    // The argument for OscElementAt must be sequential.\r\n    // highlight-next-line\r\n    [OscElementAt(0)]\r\n    public int IntValue { get; set; }\r\n    // highlight-next-line\r\n    [OscElementAt(1)]\r\n    public float FloatValue { get; private set; }\r\n    // highlight-next-line\r\n    [OscElementAt(2)]\r\n    public string StringValue;\r\n\r\n    public ExampleData()\r\n    {\r\n        IntValue = 0;\r\n        FloatValue = 0.0f;\r\n        StringValue = string.Empty;\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sending-data",children:"Sending Data"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["3. Send an instance using ",(0,r.jsx)(n.code,{children:"ExtremeOsc.OscClient"}),"."]})}),"\n",(0,r.jsxs)(n.p,{children:["Example usage in a ",(0,r.jsx)(n.code,{children:"MonoBehaviour"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="ExampleClient.cs"',children:'public class ExampleClient : MonoBehaviour\r\n{\r\n    private OscClient client = null;\r\n\r\n    private void Awake()\r\n    {\r\n        client = new OscClient("127.0.0.1", 5555);\r\n    }\r\n\r\n    private void OnDestroy()\r\n    {\r\n        client?.Dispose();\r\n        client = null;\r\n    }\r\n\r\n    // Send an instance of an OscPackable class\r\n    private void SendExample()\r\n    {\r\n        var data = new ExampleData\r\n        {\r\n            IntValue = Random.Range(0, 256),\r\n            FloatValue = Random.Range(0.0f, 1.0f),\r\n            StringValue = "Hello, Example!"\r\n        };\r\n        client.Send("/example", data);\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"receiving-osc",children:"Receiving OSC"}),"\n",(0,r.jsx)(n.h3,{id:"defining-classes-structs-1",children:"Defining Classes (Structs)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["1. Attach the ",(0,r.jsx)(n.code,{children:"[OscReceiver]"})," attribute to the class that will receive and handle OSC callbacks."]})}),"\n",(0,r.jsxs)(n.p,{children:["A class can be annotated with ",(0,r.jsx)(n.code,{children:"[OscReceiver]"})," if it meets the following conditions:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It is a root class (not nested within another class)."}),"\n",(0,r.jsx)(n.li,{children:"It is not an abstract class."}),"\n",(0,r.jsx)(n.li,{children:"It is a partial class."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["2. Create an ",(0,r.jsx)(n.code,{children:"ExtremeOsc.OscServer"})," instance to receive OSC messages. Register the class instance that will handle the callbacks with this server."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="ExampleServer.cs"',children:"// The class must be partial for automatic code generation.\r\n// highlight-next-line\r\n[OscReceiver]\r\npublic partial class ExampleServer : MonoBehaviour\r\n{\r\n    private OscServer server = null;\r\n\r\n    private void Awake()\r\n    {\r\n        server = new OscServer(5555);\r\n        // Register this class instance to handle callbacks\r\n        // highlight-next-line\r\n        server.Register(this);\r\n        server.Open();\r\n    }\r\n\r\n    private void OnDestroy()\r\n    {\r\n        server.Unregister(this);\r\n        server?.Dispose();\r\n        server = null;\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"receiving-data",children:"Receiving Data"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["3. Define a callback function and attach the ",(0,r.jsx)(n.code,{children:"[OscCallback(address)]"})," attribute. The first argument must always be ",(0,r.jsx)(n.code,{children:"string address"}),"."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="ExampleServer.cs"',children:'[OscReceiver]\r\npublic partial class ExampleServer : MonoBehaviour\r\n{\r\n    // highlight-start\r\n    [OscCallback("/example")]\r\n    private void OnExample(string address, ExampleData data)\r\n    {\r\n        \r\n    }\r\n    // highlight-end\r\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);